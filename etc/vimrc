" Turn off vi mode, we are using VIM!
set nocompatible

" Turn on pathogen, our plugin package manager.
call pathogen#infect()
" Run helptags to load docs from all the bundles.
Helptags

" Turn on syntax highlighting.
syntax on

" Change to the correct indention and plugins dependent on the file type.
filetype on
filetype indent on
filetype plugin on

" Turn on line numbers.
set number

" Turn on the visual bell.
set visualbell
set noerrorbells

" Tab Settings
set autoindent
set smartindent
set smarttab
set expandtab

set shiftwidth=2
set softtabstop=2
set tabstop=2

" Allow for cursor beyond last character.
set virtualedit=onemore

" Store more history!
set history=1000

" Configure wildignore
set wildignore+=*.gz,*.swp,*.bak,*.pyc,*.class

" When we turn on set list, we want to see these types of whitespace:
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<

" smart case-sensitive searching
set ignorecase
set smartcase

" remap ESC
inoremap jj <ESC>

" a few emacs keybindings while in insert mode
inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-f> <Right>
inoremap <C-b> <Left>
inoremap <C-p> <Up>
inoremap <C-n> <Down>

" Wrapped lines go to next row not next line in file
noremap <silent> j gj
noremap <silent> k gk

" Remap the leader key
let mapleader=','

" Use \ to repeat find backwards.
nnoremap <silent> \ ,

" Save using sudo shortcut.
cnoremap <silent> W :silent w !sudo tee % > /dev/null<CR>:edit!<CR>

" Set up extra whitespace detection and stripping.
nnoremap <silent> <leader>W :StripWhitespace<CR>

" Indent the whole file and return to the current line
nnoremap <silent> <leader>i gg=G''

" Run Ack
nnoremap <leader>a :Ack<space>

" Generate ctags
nnoremap <silent> <leader>t :silent !ctags -R --exclude=.git .<CR><C-l>

" CtrlP shortcuts
nnoremap <silent> <leader>p :CtrlP<CR>
nnoremap <silent> <leader>P :CtrlPTag<CR>

" Faster mapping for omni-completion
inoremap <silent> <leader><leader><leader> <C-x><C-o>

" Quickly edit/reload the vimrc file
nnoremap <silent> <leader>ev  :e $MYVIMRC<CR>
nnoremap <silent> <leader>esv :vsplit<CR><C-w><C-w>:e $MYVIMRC<CR>
nnoremap <silent> <leader>sv  :so $MYVIMRC<CR>

" Shortcuts for opening new split windows
nnoremap <silent> <leader>h :split<CR><C-w><C-w>
nnoremap <silent> <leader>v :vsplit<CR><C-w><C-w>
nnoremap <silent> <leader>w <C-w><C-w>
nnoremap <silent> <leader>q :q<CR>
nnoremap <silent> <leader>Q :q!<CR>

" Shortcut to reloading last buffer
nnoremap <silent> <leader>b :b#<CR>

" Insert blank line below or above without leaving normal mode
nnoremap <silent> <leader>o o<ESC>
nnoremap <silent> <leader>O O<ESC>

" Fugitive shortcuts
nnoremap <leader>G :Git<space>
nnoremap <silent> <leader>gl :Glog<CR>
nnoremap <silent> <leader>gd :Gdiff<CR>
nnoremap <silent> <leader>gb :Gblame<CR>
nnoremap <silent> <leader>gs :Gstatus<CR>
nnoremap <silent> <leader>gc :Gcommit<CR>
nnoremap <silent> <leader>gr :Gread<CR>

" Map Y to yank until EOL
nnoremap Y y$

" Tired of hitting F1 accidentally?
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

" Toggle list (display unprintable characters)
nnoremap <silent> <F9> :set list!<CR>

" Toggle highlighting the current line and column.
nnoremap <silent> <F10> :set cursorline!<CR>:set cursorcolumn!<CR>

" F11 to toggle between 'paste' and 'nopaste' in insert mode
set pastetoggle=<F11>

" F12 to toggle line numbers and git-gutter
nnoremap <silent> <F12> :set nonumber!<CR>:GitGutterToggle<CR>

" NERDTree Settings
let NERDTreeMinimalUI  = 1
let NERDTreeDirArrows  = 0
let g:NERDTreeWinSize  = 30
let NERDTreeQuitOnOpen = 1
nnoremap <silent> <C-n> :NERDTreeToggle<CR>

" CtrlP Settings
let g:ctrlp_custom_ignore = 'tags'

" Syntastic Settings
let g:syntastic_ruby_checkers = ['mri']

" vim-rspec Settings
nnoremap <silent> <leader>Tt :call RunCurrentSpecFile()<CR>
nnoremap <silent> <leader>Ts :call RunNearestSpec()<CR>
nnoremap <silent> <leader>Tl :call RunLastSpec()<CR>
nnoremap <silent> <leader>Ta :call RunAllSpecs()<CR>

" Configure how vim looks.
colorscheme jellybeans

" Make the GUI nice.
if has('gui_running')
  " Turn off the menu, tool, and scroll bar.
  set guioptions-=m
  set guioptions-=T
  set guioptions-=L
  set guioptions-=l
  set guioptions-=r
  set guioptions-=R

  " Increase the starting size of the editor.
  set lines=40
  set columns=100

  " Make NERDTree look nice when using a GUI.
  let NERDTreeDirArrows = 1

  " Default to line and column highlighting.
  set cursorline cursorcolumn

  " Set up some decent fonts.
  if has("gui_win32")
    set guifont=Consolas:h10:cANSI
  elseif has("gui_mac")
    set guifont=Menlo\ Regular:h15
  endif
endif

" If tmux or screen is being used, default to 256 colors.
if &term == "screen"
  set t_Co=256
end

" Load a personal vimrc if one exists.
let s:personalrc = expand($HOME . '/.personal.vimrc')
if filereadable(s:personalrc)
  exec ':so ' . s:personalrc
endif
